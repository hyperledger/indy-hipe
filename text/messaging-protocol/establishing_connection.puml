@startuml

actor Alice as A
actor Bob as B

rnote over A #white
{
    "id": offer_nonce
    "type": connection_offer
    "content": {
        "ep": {
            "did": A.ep.did
            --- or ---
            "ha": A.ep.url  
            "verkey": A.ep.vk 
        }
    }
}
end note


A -> B: A makes a connection offer, in\nperson or securely over internet
|||


rnote over B #white
{ # anon-encrypted using A.ep.vk
    "id": offer_nonce (optional)
    "to": A.did@A (public, optional)
    "type": connection_request
    "content": {  # plaintext (cannot yet be encrypted)
        "did": B.did@B:A
        "verkey": B.vk@B:A
        "ep": B.ep
    }
}
end note


B -> A: Send connection request message
|||

rnote over A #white
{ # anon-encrypted using B.ep.vk
    "to": B.did@B:A,
    "type": connection_response,
    "content": {  # anon-encrypted using B.vk@B:A
            "did": A.did@A:B,
            "verkey": A.vk@A:B
    }
}
end note


A -> B: Send connection response message
|||

rnote over B #white
{ # anon-encrypted using A.ep.vk
    "to": A.did@A:B
    "type": message_acknowledgement
    "message": "success" #auth-encrypted 
                  using A.vk@A:B and B.vk@B:A
}
end note


B -> A: B acknowledges success for transport & encryption 
|||

rnote over A #white
{ # anon-encrypted using B.ep.vk
    "id": B.did@B:A
    "type": message_acknowledgement
    "message": "success" #auth-encrypted 
                  using B.vk@B:A and A.vk@A:B
}
end note


A -> B: A acknowledges success for transport & encryption 
|||

A <-> B: A & B can now send authcrypted messages

@enduml